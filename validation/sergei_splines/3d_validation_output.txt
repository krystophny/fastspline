/home/ert/code/fastspline/validation/sergei_splines/../../src/fastspline/sergei_splines.py:584: NumbaWarning: Cannot cache compiled function "construct_splines_2d_cfunc" as it uses dynamic globals (such as ctypes pointers and large global arrays)
  @cfunc(types.void(
/home/ert/code/fastspline/validation/sergei_splines/../../src/fastspline/sergei_splines.py:997: NumbaWarning: Cannot cache compiled function "construct_splines_3d_cfunc" as it uses dynamic globals (such as ctypes pointers and large global arrays)
  @cfunc(types.void(
Debug: Z_data shape = (8, 8, 8)
Debug: First few Z_data values (before flatten):
  Z_data[0,0,0] = 0.0000000000
  Z_data[1,0,0] = 0.4338837391
  Z_data[0,1,0] = 0.0000000000
  Z_data[0,0,1] = 0.0000000000
3D Spline Validation - Python FastSpline
==================================================
Test function: f(x,y,z) = sin(πx) * cos(πy) * exp(-z/2)
Grid size: 8 x 8 x 8
Domain: [0,1] x [0,1] x [0,2]

First 10 data points (flattened):
  z_flat[0] = 0.0000000000
  z_flat[1] = 0.0000000000
  z_flat[2] = 0.0000000000
  z_flat[3] = 0.0000000000
  z_flat[4] = 0.0000000000
  z_flat[5] = 0.0000000000
  z_flat[6] = 0.0000000000
  z_flat[7] = 0.0000000000
  z_flat[8] = 0.0000000000
  z_flat[9] = 0.0000000000


Order: 3
--------------------

First 10 coefficients (for Fortran comparison):
  coeff[0] = 0.0000000000
  coeff[1] = 0.0000000000
  coeff[2] = 0.0000000000
  coeff[3] = 0.0000000000
  coeff[4] = 0.0000000000
  coeff[5] = 0.0000000000
  coeff[6] = 0.0000000000
  coeff[7] = 0.0000000000
  coeff[8] = 0.0000000000
  coeff[9] = 0.0000000000

Test point evaluations:
  Point (0.5000,0.5000,1.0000): exact=0.0000000000, spline=0.0000000000, error=3.4826e-17
    Fortran: exact=0.0000000000, error=3.7139e-17
  Point (0.2500,0.7500,0.5000): exact=-0.3894003915, spline=-0.3900154374, error=6.1505e-04
    Fortran: exact=-0.3894003915, error=3.5702e-11
  Point (0.8000,0.3000,1.5000): exact=0.1631986302, spline=0.1630666702, error=1.3196e-04
    Fortran: exact=0.1631986302, error=1.5134e-11
  Point (0.1000,0.9000,0.2000): exact=-0.2659250450, spline=-0.2643780182, error=1.5470e-03
  Point (0.6000,0.4000,1.8000): exact=0.1194878250, spline=0.1194445364, error=4.3289e-05

Max error: 1.5470e-03, RMS error: 7.4711e-04

Order: 4
--------------------

Test point evaluations:
  Point (0.5000,0.5000,1.0000): exact=0.0000000000, spline=0.0000823673, error=8.2367e-05
    Fortran: exact=0.0000000000, error=3.7139e-17
  Point (0.2500,0.7500,0.5000): exact=-0.3894003915, spline=-0.3893916006, error=8.7909e-06
    Fortran: exact=-0.3894003915, error=3.5702e-11
  Point (0.8000,0.3000,1.5000): exact=0.1631986302, spline=0.1632241412, error=2.5511e-05
    Fortran: exact=0.1631986302, error=1.5134e-11
  Point (0.1000,0.9000,0.2000): exact=-0.2659250450, spline=-0.2658032109, error=1.2183e-04
  Point (0.6000,0.4000,1.8000): exact=0.1194878250, spline=0.1194500486, error=3.7776e-05

Max error: 1.2183e-04, RMS error: 6.8968e-05

Order: 5
--------------------

Test point evaluations:
  Point (0.5000,0.5000,1.0000): exact=0.0000000000, spline=0.3796925551, error=3.7969e-01
    Fortran: exact=0.0000000000, error=3.7139e-17
  Point (0.2500,0.7500,0.5000): exact=-0.3894003915, spline=0.3569293388, error=7.4633e-01
    Fortran: exact=-0.3894003915, error=3.5702e-11
  Point (0.8000,0.3000,1.5000): exact=0.1631986302, spline=0.3562622468, error=1.9306e-01
    Fortran: exact=0.1631986302, error=1.5134e-11
  Point (0.1000,0.9000,0.2000): exact=-0.2659250450, spline=-2.5791107229, error=2.3132e+00
  Point (0.6000,0.4000,1.8000): exact=0.1194878250, spline=-0.3053875462, error=4.2488e-01

Max error: 2.3132e+00, RMS error: 1.1198e+00

==================================================
Testing 3D Derivatives (Order 3)
==================================================
Traceback (most recent call last):
  File "/home/ert/code/fastspline/validation/sergei_splines/validate_3d_python.py", line 336, in <module>
    validate_3d_splines()
    ~~~~~~~~~~~~~~~~~~~^^
  File "/home/ert/code/fastspline/validation/sergei_splines/validate_3d_python.py", line 181, in validate_3d_splines
    evaluate_splines_3d_der_cfunc(orders, num_points, periodic, x_min, h_step,
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                coeff, test_point, y_out, dy_out)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ert/code/fastspline/.venv/lib/python3.13/site-packages/numba/core/ccallback.py", line 135, in __call__
    return self._pyfunc(*args, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
TypeError: evaluate_splines_3d_der_cfunc() missing 2 required positional arguments: 'dydx2_out' and 'dydx3_out'
